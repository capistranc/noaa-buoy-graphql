var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var gql = require("apollo-server").gql;
var typeDefs = gql(__makeTemplateObject(["\n  type Query {\n    launches(\n      #The number of results to show. Must be >= 1. Default = 20\n      pageSize: Int\n      #If you add a cursor here, it will only return results _after_ this cursor\n      after: String\n    ): LaunchConnection!\n    launch(id: ID!): Launch\n    me: User\n  }\n\n  type Mutation {\n    # if false, signup failed -- check errors\n    bookTrips(launchIds: [ID]!): TripUpdateResponse!\n\n    # if false, cancellation failed -- check errors\n    cancelTrip(launchId: ID!): TripUpdateResponse!\n\n    login(email: String): LoginInfo!\n\n    # for use with the iOS tutorial\n    uploadProfileImage(file: Upload!): User\n  }\n\n  type LoginInfo {\n    id: String!\n    token: String\n  }\n\n  type TripUpdateResponse {\n    success: Boolean!\n    message: String\n    launches: [Launch]\n  }\n\n  \"\"\"\n  Simple wrapper around our list of launches that contains a cursor to the\n  last item in the list. Pass this cursor to the launches query to fetch results\n  after these.\n  \"\"\"\n  type LaunchConnection {\n    cursor: String!\n    hasMore: Boolean!\n    launches: [Launch]!\n  }\n\n  type Launch {\n    id: ID!\n    site: String\n    mission: Mission\n    rocket: Rocket\n    isBooked: Boolean!\n  }\n\n  type Rocket {\n    id: ID!\n    name: String\n    type: String\n  }\n\n  type User {\n    id: ID!\n    email: String!\n    profileImage: String\n    trips: [Launch]!\n    token: String\n  }\n\n  type Mission {\n    name: String\n    missionPatch(size: PatchSize): String\n  }\n\n  enum PatchSize {\n    SMALL\n    LARGE\n  }\n"], ["\n  type Query {\n    launches(\n      #The number of results to show. Must be >= 1. Default = 20\n      pageSize: Int\n      #If you add a cursor here, it will only return results _after_ this cursor\n      after: String\n    ): LaunchConnection!\n    launch(id: ID!): Launch\n    me: User\n  }\n\n  type Mutation {\n    # if false, signup failed -- check errors\n    bookTrips(launchIds: [ID]!): TripUpdateResponse!\n\n    # if false, cancellation failed -- check errors\n    cancelTrip(launchId: ID!): TripUpdateResponse!\n\n    login(email: String): LoginInfo!\n\n    # for use with the iOS tutorial\n    uploadProfileImage(file: Upload!): User\n  }\n\n  type LoginInfo {\n    id: String!\n    token: String\n  }\n\n  type TripUpdateResponse {\n    success: Boolean!\n    message: String\n    launches: [Launch]\n  }\n\n  \"\"\"\n  Simple wrapper around our list of launches that contains a cursor to the\n  last item in the list. Pass this cursor to the launches query to fetch results\n  after these.\n  \"\"\"\n  type LaunchConnection {\n    cursor: String!\n    hasMore: Boolean!\n    launches: [Launch]!\n  }\n\n  type Launch {\n    id: ID!\n    site: String\n    mission: Mission\n    rocket: Rocket\n    isBooked: Boolean!\n  }\n\n  type Rocket {\n    id: ID!\n    name: String\n    type: String\n  }\n\n  type User {\n    id: ID!\n    email: String!\n    profileImage: String\n    trips: [Launch]!\n    token: String\n  }\n\n  type Mission {\n    name: String\n    missionPatch(size: PatchSize): String\n  }\n\n  enum PatchSize {\n    SMALL\n    LARGE\n  }\n"]));
module.exports = typeDefs;
